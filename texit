# Script to autocompile latex documents
# by detecting a change in texfile status.

# Author: Oliver Gorton

# Counting variables
stattime=0 
compiles=0

# Settings
slptime=1.0 # Time to wait between status checks

usage()
{
    echo "texit [basefilename] [options]"
}

#Get user texfile from command line
filebasename=$1

#No texfile found on command line, request from user.
if [ $# -eq 0 ]
then
        echo "Please provide an input .tex file (ommit .tex)":
        read filebasename
fi

# Check option flags
while [ "$1" != "" ]; do
    case $1 in
        -h | --help )           usage
                                exit
                                ;;
        * )                    
                                
    esac
    shift
done

# Check for existence of file
if [[ -f "$filebasename.tex" ]]
then
    texfile=$filebasename'.tex'
    echo Texing: $texfile
else
    echo "$texfile not found"
    exit -1
fi

# Initialize
# If this command doesn't work something's not right.
if {
    fmt='-c %Z'    
    echo "Trying linux initialization."
    stattime=($(stat $fmt $texfile)) #Linux
}; then { 
    echo "Initialize success."
}; else {
    echo "Initialize failed."
    echo "Trying macOS initialization."
    fmt='-f %c'
    
    if {
        stattime=($(stat $fmt $texfile)) #macOS
    }; then {
        echo "Initialization success."
    }; else {
        echo "Initialization failed. Incompatible stat command!"
    }
    fi

}
fi

{ # Main task
while true; do

    stattimenew=($(stat $fmt $texfile))

    # Detect change in source texfile
    if [ $stattimenew -ne $stattime ]; then
        if { # try double compile
            pdflatex -halt-on-error ./$texfile > $filebasename.texit;
            pdflatex -halt-on-error ./$texfile > $filebasename.texit;
        }; then { # success
            ((compiles++))
            echo "Compile #$compiles success at "$(date)"."
            rm *.log *.aux
        }; else  { # catch
            echo "Compile failed."
        }
        fi
        sleep 2 # wait extra time after compile
    fi
    stattime=$stattimenew
    sleep $slptime
done
} 
